# PYENV =============
- name: install pyenv, pyenv-virtualenv
  shell: |
    curl https://pyenv.run | zsh
  args:
    creates: '{{ ansible_env.HOME }}/.pyenv'
  when: python == "pyenv"

- name: install requirements to build python
  apt:
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev 
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
    state: present
    update_cache: true
  become: true
  when: python == "pyenv"

- name: install python 3.9 (may take some time) and set to global
  shell: >
    {{ ansible_env.HOME }}/.pyenv/bin/pyenv install -s 3.9.6 &&
    {{ ansible_env.HOME }}/.pyenv/bin/pyenv global 3.9.6
  when: python == "pyenv"

# OR SYSTEM PYTHON

- name: install pip
  apt:
    name: python3-pip
  become: true
  when: python == "system"

# ===================

- name: install poetry
  shell: >
    source {{ ansible_env.HOME }}/.zprofile &&
    curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
  args:
    executable: /bin/zsh

- name: install mambaforge
  shell: |
    curl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh
    bash Mambaforge-$(uname)-$(uname -m).sh -b
  args:
    executable: /bin/zsh
    creates: '{{ ansible_env.HOME }}/mambaforge'

- name: add mambaforge to zshrc
  shell: '{{ ansible_env.HOME }}/mambaforge/bin/mamba init zsh'
