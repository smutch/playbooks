set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Use the all important vim key bindings
setw -g mode-keys vi
bind  h select-pane -L
bind  j select-pane -D
bind  k select-pane -U
bind  l select-pane -R
bind -r   Up select-pane -U
bind -r Down select-pane -D
bind -r Left select-pane -L
bind -r Right select-pane -R

# Create an environment that zsh can make sense of
set-environment -g INSCREEN yes

set-window-option -g automatic-rename off # auto name
set-option -g allow-rename off

# Change the command sequance to C-a
set-option -g prefix C-a

# Use C-a for the last active window
bind-key C-a last-window

# Use a to send a sequence to any nested tmux instances
bind-key a send-prefix

# Start window numbering at 1
set -g base-index 1

# Set escape time to zero - Allows for faster key repetition
set -s escape-time 0

# Activity monitoring
setw -g monitor-activity off
set -g visual-activity off

# Highlight active window
set-window-option -g window-status-current-format ' #I:#W '  # '#I' gives number
set -g status-left-length 15
set-option -g status-left ' #[bold]üêß #S#[default] ‚°á'

# window list in the centre
set -g status-justify left

# Only ring bells for current window
set -g bell-action current

# Mouse scrolling
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Swap window to position 1
bind-key T swap-window -t 1

# Change the key to toggle between windows
bind-key C-w last-pane

# switch to nested session with <F12>
# taken from: https://medium.freecodecamp.org/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style bg=colour236,fg=colour249 \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  refresh-client -S
  
wg_is_keys_off="#[fg=red]#([ $(tmux show-option -qv key-table) = 'off' ] && echo '>>> NESTED <<<')#[default]"

set -g status-right "$wg_is_keys_off"

#### COLOUR

# default statusbar colors
set-option -g status-style bg=default,fg=colour249

# default window title colors
set-window-option -g window-status-style fg=colour249,dim,bg=default

# active window title colors
set-window-option -g window-status-current-style fg=colour205,bold,bg=default

# pane border
set-option -g pane-border-style fg=colour63,bg=default

# message text
set-option -g message-style bg=default,fg=colour249

# pane number display
set-option -g display-panes-active-colour colour5
set-option -g display-panes-colour colour8

# clock
set-window-option -g clock-mode-colour colour2

# Force shortcuts for new window/pane creation to use current working directroy
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
